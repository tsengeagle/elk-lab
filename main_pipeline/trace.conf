input {
	stdin {
		add_field => {
			"fields.env"=>"hello"
		}
	}
    beats{
        port => 9603
    }
}

filter {
	if ("request_id" in [message]) {
		grok {
			match => {
				"message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{LOGLEVEL:log_level} --- \[%{DATA:log_thread}\] %{DATA:logger} \: Axis2Message\ summary\ trace\:\[source\:%{DATA:source},dest\:%{DATA:dest},endpoint\:%{DATA:endpoint},message_sha\:%{DATA:message_sha},repeat_time\:%{NUMBER:repeat},retry_time\:%{NUMBER:retry},total_duration\:%{NUMBER:total_duration},call_duration\:%{NUMBER:call_duration},generate_request_duration\:%{NUMBER:gen_request_duration},calculate_sha_duration\:%{NUMBER:cal_sha_duration},send_request_duration\:%{NUMBER:send_duration},unMarshalling_duration\:%{NUMBER:unmarshall_duration},init_to_call_duration\:%{NUMBER:init_to_call_duration},call_to_gen_req_duration\:%{NUMBER:call_to_gen_req_duration},gen_req_to_sha_duration\:%{NUMBER:gen_req_to_sha_duration},sha_to_send_duration\:%{NUMBER:sha_to_send_duration},send_to_unmarshall_duration\:%{NUMBER:send_to_unmarshall_duration},unmarshall_to_end_duration\:%{NUMBER:unmarshall_to_end_duration},dup_duration\:%{NUMBER:duplicated_wait_duration},requestOME_length\:%{NUMBER:request_length},responseOME_length\:%{NUMBER:response_length},request_id\:%{DATA:request_id}\]%{GREEDYDATA:other_message}"
			}
			add_tag => ["axis2_trace", "trigger_by_ro"]
		}
	}else {
		grok {
			match => {
				"message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{LOGLEVEL:log_level} --- \[%{DATA:log_thread}\] %{DATA:logger} \: Axis2Message\ summary\ trace\:\[source\:%{DATA:source},dest\:%{DATA:dest},endpoint\:%{DATA:endpoint},message_sha\:%{DATA:message_sha},repeat_time\:%{NUMBER:repeat},retry_time\:%{NUMBER:retry},total_duration\:%{NUMBER:total_duration},call_duration\:%{NUMBER:call_duration},generate_request_duration\:%{NUMBER:gen_request_duration},calculate_sha_duration\:%{NUMBER:cal_sha_duration},send_request_duration\:%{NUMBER:send_duration},unMarshalling_duration\:%{NUMBER:unmarshall_duration},init_to_call_duration\:%{NUMBER:init_to_call_duration},call_to_gen_req_duration\:%{NUMBER:call_to_gen_req_duration},gen_req_to_sha_duration\:%{NUMBER:gen_req_to_sha_duration},sha_to_send_duration\:%{NUMBER:sha_to_send_duration},send_to_unmarshall_duration\:%{NUMBER:send_to_unmarshall_duration},unmarshall_to_end_duration\:%{NUMBER:unmarshall_to_end_duration},dup_duration\:%{NUMBER:duplicated_wait_duration},requestOME_length\:%{NUMBER:request_length},responseOME_length\:%{NUMBER:response_length}%{GREEDYDATA:other_message}"
			}
			add_tag=>["axis2_trace"]
		}
	}
}

output {
	# stdout {
	# 	codec => rubydebug
	# }
	if "axis2_trace" in [tags] {
	    elasticsearch {
			hosts => ["elasticsearch.mfsd.my:9200"]
			index => "service-trace-%{[fields][env]}-%{+YYYY.MM.dd}"
		}
    }
}
